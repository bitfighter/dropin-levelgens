-- objects with IDs higher than this are not affected
local EXEMPT_ID_START = 900

-- the types of objects to change over
local OWNED_OBJECT_TYPES = {
  -- ObjType.ShipSpawn,
  ObjType.Turret,
  ObjType.ForceFieldProjector
}

-----------------------------------------------------------
-- You probably don't need to change anything below here --
-----------------------------------------------------------

local gZoneHistory = { }

function main()
  bf:subscribe(Event.ShipEnteredZone)
  bf:subscribe(Event.ScoreChanged)
end

local teamObjects = { }
local zones = { }
function onShipEnteredZone(ship, enteredZone)

  -- only fire when newly capturing a zone
  if (not ship:hasFlag()) or (gZoneHistory[enteredZone:getId()] == ship:getTeamIndex()) then
    return
  end 

  -- mark this zone and its owner in the history
  gZoneHistory[enteredZone:getId()] = ship:getTeamIndex()

  bf:findAllObjects(teamObjects, unpack(OWNED_OBJECT_TYPES))
  bf:findAllObjects(zones, ObjType.GoalZone)
  for _,obj in pairs(teamObjects) do
    if obj:getId() < EXEMPT_ID_START then
      local closestZone = nil
      local closestDistance = math.huge

      -- find the zone closest to this object
      for _,zone in pairs(zones) do
        local distance = point.distSquared(obj:getPos(), zone:getPos())
        if distance < closestDistance then
          closestDistance = distance
          closestZone = zone
        end
      end

      -- if it is the zone just entered, then this zone was taken control of
      if closestZone == enteredZone then
        obj:setTeam(enteredZone:getTeamIndex())
        pcall(function() obj:setHealth(1) end)
      end
    end
  end
end

function onScoreChanged()
  Timer:scheduleOnce(function()
    bf:findAllObjects(zones, ObjType.GoalZone)

    -- check if all goal zones are on the same team -- this indicates a touchdown
    local team = zones[1]:getTeamIndex()
    for _,zone in pairs(zones) do
      if zone:getTeamIndex() ~= team then
        return
      end
    end

    -- disable objects and set them to neutral
    bf:findAllObjects(teamObjects, ObjType.Turret, ObjType.ForceFieldProjector)
    for _,obj in pairs(teamObjects) do
      if obj:getId() < EXEMPT_ID_START then
        obj:setTeam(-1)
        pcall(function() obj:setHealth(0) end)
        gZoneHistory = { }
      end
    end
  end, 1)
end